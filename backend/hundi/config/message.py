UNKNOWN_MARKET_TYPE = "Unknown market type: {}"
UNKNOWN_PAIRS = "Unknown pairs: {}"
UNKNOWN_CANDLE_DATA_TYPE = "Unknown candle data type: {}"
UNCLASSIFIED_MESSAGE = "Unclassified message: {}"
WEBSOCKET_ERROR = "Websocket error: {}"
WEBSOCKET_EXCEPTION_ON_CLOSE = "Websocket exception on close"
WEBSOCKET_CLOSED = "Websocked closed"
WEBSCOKED_STARTED = "Websocked thread started"
WEBSOCKET_STOPPED = "Webssocked stopped/joined"
SUBSCRIBED_TO_CHANNELS = "Subscribed to channels: {}"
CONTRACT_SUBSCRIPTION_STATUS = "Subscription status {} for contract: {}"
CHANNEL_SUBSCRIPTION_STATUS = "Subscription status {} for channel {} at pair: {}"
CHANNEL_SYSTEM_STATUS = "Recived system status: {} with version: {}"
ORDER_SNAPSHOT_FINISHED = "Finished processing snapshot, bids size: {}, asks size: {}"
SNAPSHOT_MESSAGE = "Recived snapshot message: {}"
ORDER_MESSAGE = "Recived orderbook message: {}"
ORDERS_WRITTEN_COUNT = "Written orders count: {}"
ORDER_ASKS_BUFFER_SIZE = "Order asks buffer size: {}"
ORDER_BIDS_BUFFER_SIZE = "Order bids buffer size: {}"
EMPTY_BUFFER = "Empty buffer: {}"
UNKNOWN_ORDER_SIDE = "Unknown order side: {}"
ORDER_WRITTEN = "Order written {} {}  s:{} p:{} q:{}"
CANDLES_WRITTEN_COUNT = "Candles written count: {}"
CANDLES_BUFFER_SIZE = "Candles buffer size: {}"
CANDLE_WRITTEN = "Candle written {} {} {} o:{} h:{} l:{} c:{} v:{}"
KAIROSDB_NO_EXPECTED_TAG = "KairosDB did not return expected tag: {}"
KAIROSDB_ERROR_RESPONSE_STATUS = "KairosDB returned error response {}: {}"
KAIROSDB_ERROR_DECODING_JSON = "Error while decoding KairosDB JSON object: {}"
QUERY_EXCEPTION = "Exception in query: {}"
QUERY_CURRENT = "Current query: {}"
ORDER_ATTRIBUTES = "Order attributes: {}"
RESPONSE = "Response: {}"
KAIROSDB_POSTING = "Posting to KairosDB: {}"
KARIOSDB_DATAPOINTS_PUT = "KairosDB PUT {} points for {} in {:.3f}s, {:.1f} points/s"
KAIROSDB_DATAPOINTS_PUT_EXCEPTION = "Exception in put_datapoints: {}"
DATAFRAME_MINOR_AXIS_ERROR = "Dataframe does not have minor_axis"
SPREAD_WRITTEN_COUNT = ""
SPREAD_WRITTEN = "Spread written {} {} v:{}"
SPREADS_BUFFER_SIZE = "Spread buffer size: {}"
INFO_KEYBOARD_INTERRUPT = "Got keyboard interrupt signal"
ACTION_EXCEPTION = "Action exception: {}"
ACTION_STOP_EXCEPTION = "Action stop exception: {}"
SPREAD_STARTED = "Spread processor started"
SPREAD_STOPPED = "Spread processor stoped"
AUTH_STARTED = "Authenticating via {} API"
AUTH_STOPPED = "Authentication stoped"
AUTH_TOKEN_ACQUIRED = "Authentication token acquired via {} API"
AUTH_TOKEN_SIZE = "Wrong authentication token size for: {}"
TICKERS_WRITTEN_COUNT = "Tickers written count: {}"
TICKERS_BUFFER_SIZE = "Tickers buffer size: {}"
TICKER_WRITTEN = "Ticker written {} {} {} o:{} h:{} l:{} c:{} v:{}"
HEARTBEAT_RECIVED = "Heartbeat recived: {}"
GOT_KEYBOARD_INTERRUPT = "Got KeyboardInterrupt"
HEALTH_CHECK = "Health Check from {}"
HEALTH_CHECK_RESULT = "Health Check results: {}"
